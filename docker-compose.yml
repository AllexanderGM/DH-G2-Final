networks:
    app-network:
        driver: bridge

volumes:
    mysql_data:

services:
    mysql:
        container_name: "${NAME}-mysql_db"
        image: mysql:8.0
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_NAME}"
        ports:
            - "${DB_PORT}:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            retries: 5
            start_period: 20s

    backend:
        container_name: "${NAME}-backend_spring_boot"
        restart: always
        build:
            context: ./backend
            dockerfile: Dockerfile
        env_file:
            - ./backend/.env
        ports:
            - "${PORT_BACK}:${PORT_BACK}"
        depends_on:
            mysql:
                condition: service_healthy  # Espera a que MySQL est√© listo
        networks:
            - app-network

    frontend:
        container_name: "${NAME}-frontend_react"
        restart: always
        build:
            context: ./frontend
            dockerfile: Dockerfile
        env_file:
            - ./frontend/.env
        ports:
            - "${PORT_FRONT}:80"
        depends_on:
            - backend
        networks:
            - app-network
